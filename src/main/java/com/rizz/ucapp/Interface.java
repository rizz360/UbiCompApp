/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.rizz.ucapp;

import com.wordpress.loeper.kvv.live.model.Departure;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Timer;


public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    private static final String currentLocation = "Neureut Baerenweg";
    //private static double lon = 49.046283;
    //private static double lat = 8.381345;
    private static Interface instance = null;
    public Interface() {
        initComponents();
        
        /* Set Default Variable */
        //currentLocation = DepartureHandler.getStopName(lon, lat);
        LocationHandler.lookupWOEID(currentLocation);
        WeatherHandler.updateWeather();
        updateAll();
        
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new UpdateTimer(), 0, 5000);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weatherPanel = new javax.swing.JPanel();
        tempConditionLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        weatherIcon = new javax.swing.JLabel();
        clockPanel = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        schedulePanel = new javax.swing.JPanel();
        scheduleLabel1 = new javax.swing.JLabel();
        scheduleLabel2 = new javax.swing.JLabel();
        scheduleLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        weatherPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tempConditionLabel.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        tempConditionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempConditionLabel.setText("99Â°C, Mostly Cloudy");

        locationLabel.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        locationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        locationLabel.setText("Stadtteil Neureut");

        weatherIcon.setFont(new java.awt.Font("Meteocons", 0, 110)); // NOI18N
        weatherIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        weatherIcon.setText("1");

        javax.swing.GroupLayout weatherPanelLayout = new javax.swing.GroupLayout(weatherPanel);
        weatherPanel.setLayout(weatherPanelLayout);
        weatherPanelLayout.setHorizontalGroup(
            weatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(weatherIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tempConditionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(locationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        weatherPanelLayout.setVerticalGroup(
            weatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, weatherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(weatherIcon)
                .addGap(2, 2, 2)
                .addComponent(tempConditionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationLabel))
        );

        clockPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        timeLabel.setFont(new java.awt.Font("Courier New", 0, 126)); // NOI18N
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("00:00");

        dateLabel.setFont(new java.awt.Font("Courier New", 0, 40)); // NOI18N
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("Mon, 08/04/2015");

        javax.swing.GroupLayout clockPanelLayout = new javax.swing.GroupLayout(clockPanel);
        clockPanel.setLayout(clockPanelLayout);
        clockPanelLayout.setHorizontalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        clockPanelLayout.setVerticalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPanelLayout.createSequentialGroup()
                .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateLabel))
        );

        schedulePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        scheduleLabel1.setFont(new java.awt.Font("Courier New", 0, 20)); // NOI18N
        scheduleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scheduleLabel1.setText("72 | Neureut Friedhof | 3 Minuten");

        scheduleLabel2.setFont(new java.awt.Font("Courier New", 0, 20)); // NOI18N
        scheduleLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scheduleLabel2.setText("S1 | Bad Herrenalb | 7 Minuten");

        scheduleLabel3.setFont(new java.awt.Font("Courier New", 0, 20)); // NOI18N
        scheduleLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scheduleLabel3.setText("S1 | Hochstetten | 17:43 Uhr");

        javax.swing.GroupLayout schedulePanelLayout = new javax.swing.GroupLayout(schedulePanel);
        schedulePanel.setLayout(schedulePanelLayout);
        schedulePanelLayout.setHorizontalGroup(
            schedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scheduleLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scheduleLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scheduleLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        schedulePanelLayout.setVerticalGroup(
            schedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(schedulePanelLayout.createSequentialGroup()
                .addComponent(scheduleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scheduleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scheduleLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(schedulePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(clockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weatherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(weatherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(schedulePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                instance = new Interface();
                instance.setVisible(true);
            }
        });
    }
    
    public static final void updateAll() {
        if(instance == null) return;
        instance.updateClockPanel();
        instance.updateWeatherPanel();
        instance.updateSchedulePanel();
    }
        
    private void updateWeatherPanel() {
        tempConditionLabel.setText(WeatherHandler.getTemperature() + ", " + WeatherHandler.getCondition());
        //conditionLabel.setText(WeatherHandler.getCondition());
        locationLabel.setText(WeatherHandler.getLocation());
        //tempConditionLabel.setText(WeatherHandler.getTemperature());
        weatherIcon.setText(WeatherHandler.getWeatherIcon());
    }
    
    private void updateClockPanel() {
        Calendar cal = Calendar.getInstance();
    	cal.getTime();
    	SimpleDateFormat sdfTime = new SimpleDateFormat("HH:mm");
    	SimpleDateFormat sdfdate = new SimpleDateFormat("EEE, dd/MM/YYYY");
        timeLabel.setText(sdfTime.format(cal.getTime()));
        dateLabel.setText(sdfdate.format(cal.getTime()));
    }
    
    private void updateSchedulePanel() {
        List<Departure> list = DepartureHandler.getDepartures(currentLocation);
        scheduleLabel1.setText(DepartureHandler.getFormatedDepartures(list, 0));
        scheduleLabel2.setText(DepartureHandler.getFormatedDepartures(list, 1));
        scheduleLabel3.setText(DepartureHandler.getFormatedDepartures(list, 2));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel clockPanel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel scheduleLabel1;
    private javax.swing.JLabel scheduleLabel2;
    private javax.swing.JLabel scheduleLabel3;
    private javax.swing.JPanel schedulePanel;
    private javax.swing.JLabel tempConditionLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel weatherIcon;
    private javax.swing.JPanel weatherPanel;
    // End of variables declaration//GEN-END:variables
}
